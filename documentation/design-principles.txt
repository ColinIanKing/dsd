Design Principles of a Formalism for Describing Device Properties
=================================================================
0. Formal descriptions of device properties will be stored in a 
   database.

   The database must be stored as simple text so that it may be easily
   viewed by humans, and so that it may be altered by using normal 
   source code management tools.

   The canonical version of the database must be stored some place
   where it can be viewed by all involved -- open source software
   developers, proprietary software developers, firmware users, and
   firmware developers.

1. The design of the database is based on the property set concept.

   A property set is a collection of property items that may be
   applicable to a hardware entity like a device.

   There are two types of property items, properties and property
   subsets.

   The concept of a property is defined in the "Device Properties
   UUID" document at

http://www.uefi.org/sites/default/files/resources/_DSD-device-properties-UUID.pdf

   Property subsets are nested collections of properties.  Each
   of them is associated with an additional key (name) allowing
   the subset to be referred to as a whole (and to be treated as
   a separate entity).  The canonical representation of property
   subsets is via the mechanism defined in the "Hierarchical
   Properties Extension UUID" document at

http://www.uefi.org/sites/default/files/resources/_DSD-hierarchical-data-extension-UUID-v1.pdf

2. Inheritance should be possible.

   To facilitate re-use of existing definitions of properties and
   property subsets, the database is designed to allow new property
   sets to be built on top of existing ones and to inherit property
   items from them.

   A property set whose property items are inherited is referred to
   as a base set.  A property set inheriting property items is
   referred to as a derived set.

   A property set may be derived from multiple base sets.

   A subset of one property set may be derived from another
   property set.  The set it is derived from is then referred to as
   a template of it.

   Property sets whose only purpose is to serve as base sets for
   other property sets (that can be used by platform firmware to
   represent hardware properties) or as templates for property
   subsets are referred to as abstract property sets.

3. Non-abstract property sets must be associated with device IDs.

   For every non-abstract property set in the database there must
   be at least one device ID associated with it.  The property set
   must be sufficient for representing all properties of the device
   with that ID.

   For every abstract property set in the database there must be
   at least one non-abstract property set derived from it or at
   least one property subset using it as a template.

4. Property sets represented as directories.

   To allow easy identification of property sets for the purpose of
   inheritance (among other things) the database is organized in the
   form of a directory tree and property sets are represented as
   directories.

   For the purpose of identification within the database, each property
   set has a name (arbitrary string) not containing a '.' character.

   Each property set is uniquely identified by the path from the
   top-most directory of the database (database root) to its location,
   including its name.


Contributors:
   Rafael Wysocki <rafael@kernel.org>
   Charles Garcia-Tobin <charles.garcia-tobin@arm.com>
   Al Stone <ahs3@redhat.com>

Last Updated:
   17 Sep 2015

