Rules for What You Can and Cannot Do with _DSD
==============================================

Introduction
============
The following provides rules for the process of submitting _DSD device
properties. This process must be followed by vendors wishing to see their
drivers supported by OS vendors that support ACPI.

What properties can be described by _DSD
========================================
_DSD stands for Device Specific Data.  It is an object in ACPI that may be
associated with a device to describe specific device properties that are
not covered by other mechanisms in the ACPI specification. An example may
be a MAC address, or a PHY for an networking device.

What properties must not be described by _DSD
=============================================
_DSD must only be used to describe properties that are specific to a
device, rather than properties of the system as whole.  That is, generic
properties that are required by  generic kernel frameworks must not be
described with _DSD.

_DSD must not be used to describe properties that are already covered in
the ACPI specification.

For a system described with ACPI, it must not be a requirement that any
of the following areas need an OS to evaluate _DSD in order to work:

   - Support dynamic device configurations (hot add/removal)
   - Support hardware abstraction through control methods
   - power management
   - thermal management
   - RAS interfaces

_DSD must not be used to describe properties that are specific to an
operating system. For example properties with OS names in the key
would not allowed.


Contributors:
   Charles Garcia-Tobin <charles.garcia-tobin@arm.com>

